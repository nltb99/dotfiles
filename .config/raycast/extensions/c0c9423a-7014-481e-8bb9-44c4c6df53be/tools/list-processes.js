"use strict";var l=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var w=(e,r)=>{for(var s in r)l(e,s,{get:r[s],enumerable:!0})},C=(e,r,s,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of N(r))!b.call(e,o)&&o!==s&&l(e,o,{get:()=>r[o],enumerable:!(n=x(r,o))||n.enumerable});return e};var S=e=>C(l({},"__esModule",{value:!0}),e);var L={};w(L,{default:()=>I});module.exports=S(L);var h=require("child_process");var u=process.platform,m=u==="darwin",p=u==="win32";function d(){return p?'powershell "Get-Process | Select-Object Id,ProcessName,CPU,WorkingSet,Path | ForEach-Object { \\"$($_.Id) $($_.ProcessName) $($_.CPU) $($_.WorkingSet) $($_.Path)\\" }"':"ps -eo pid,ppid,pcpu,rss,comm"}function f(e){if(!e.trim())return null;if(p){let r=e.trim().split(/\s+/);if(r.length<4)return null;let[s,n,o,a,...i]=r,t=i.join(" ")||"";return{id:parseInt(s)||0,pid:0,cpu:parseFloat(o)||0,mem:parseInt(a)||0,path:t,processName:n||""}}else{let r=["","","","","",""],s=/(\d+)\s+(\d+)\s+(\d+[.|,]\d+)\s+(\d+)\s+(.*)/,[,n,o,a,i,t]=e.match(s)??r;if(!n)return null;let c=t.match(/[^/]*[^/]*$/i)?.[0]??"";return{id:parseInt(n),pid:parseInt(o),cpu:parseFloat(a),mem:parseInt(i),path:t,processName:c}}}function P(e){if(m){let r=e.includes(".prefPane"),s=e.includes(".app/");return r?"prefPane":s?"app":"binary"}else return p&&e.toLowerCase().endsWith(".exe")&&(e.toLowerCase().includes("program files")||e.toLowerCase().includes("applications"))?"app":"binary"}function g(e,r){return m?e.match(/(?<=\/)[^/]+(?=\.app\/)/)?.[0]:p?r.replace(/\.exe$/i,""):r}async function y(){return new Promise((e,r)=>{let s=d();(0,h.exec)(s,(n,o)=>{if(n!=null){r(n);return}let a=o.split(`
`).map(i=>{let t=f(i);if(!t||!t.processName)return null;let c=P(t.path||""),$=c==="app"?g(t.path||"",t.processName||""):void 0;return{id:t.id||0,pid:t.pid||0,cpu:t.cpu||0,mem:t.mem||0,type:c,path:t.path||"",processName:t.processName||"",appName:$}}).filter(i=>i!==null&&i.processName!=="");e(a)})})}var F=(e,r="mem",s="desc")=>[...e].sort((n,o)=>{let a=n[r],i=o[r];if(a===i)return 0;if(a===void 0)return 1;if(i===void 0)return-1;let t=a<i?-1:1;return s==="desc"?-t:t}),k=(e,r)=>r?.length?e.filter(s=>{let n=`${s.path} ${s.processName} ${s.appName||""}`.toLowerCase();return r.some(o=>n.includes(o.toLowerCase()))}):e,v=(e,r)=>{if(e.length===0&&r?.length)throw new Error(`No processes found matching "${r.join(", ")}"`)};async function I(e){let r=await y(),s=k(r,e?.searchTerm);return v(s,e?.searchTerm),F(s,e?.sortBy,e?.sortOrder)}
